createdAt: "2018-12-04T23:53:42.992Z"
updatedAt: "2018-12-05T00:52:25.394Z"
type: "MARKDOWN_NOTE"
folder: "3de6303f4aef2332d945"
title: "基础知识"
content: '''
  # 基础知识
  
  推荐书籍《图说区块链》、《区块链原理、设计与应用》
  
  ❶理论学习知其然，也知其所以然，通过理论学习掌握区块链技术原理、发展轨迹，了解它的过去、现在、和未来，对区块链技术的优势和劣势有清晰的判断，区块链能解决什么问题、给社会创造什么价值、给企业和个人带来哪些发展机会等。推荐阅读《图说区块链》、《区块链原理、设计与应用》。
  ❷探寻价值和魅力结合自己感兴趣或深入了解的领域，看看区块链相关的热门和明星项目，了解这些项目能给这个行业带来哪些变革。因为自己深入了解该领域，更加容易体会和判断区块链的价值和魅力。
  探寻价值和魅力结合自己感兴趣或深入了解的领域，看看区块链相关的热门和明星项目，了解这些项目能给这个行业带来哪些变革。因为自己深入了解该领域，更加容易体会和判断区块链的价值和魅力。
  ❸学习比特币之所以要学习比特币框架，是因为比特币是目前为止区块链应用中最经典、经过市场长达8年考验的应用之一，很多山寨币的发行都是基于比特币的源码进行改动而成。另外相比以太坊、超级账本，比特币学习门槛相对较低。目前最好的学习方式是阅读源码，但作为新手可以考虑先从阅读官方文档开始。如果只是为了发行基础代币，其实学到这一步，就算入门了。
  ❹学习以太坊以太坊被称之为区块链的操作系统（平台），它的诞生大大降低了开发者开发区块链应用的难度，它不仅有相对成熟的开发工具、有图灵完备的开发语言Solidity等，还有完善的通讯开发框架Truffle，以太坊不仅功能强大，而且在吞吐量（每秒完成交易量）上相比比特币也大幅上升，比特币每秒可交易7笔左右的订单，以太坊可以完成几千笔，但随着以太坊底层代码的不断迭代升级，吞吐量还在不断稳步提升过程中（据说以太坊闪电网络版的发布，吞吐量可以达到百万级别），可以说以太坊是区块链应用开发者必修课。学习Solidity学习以太坊最核心的是开发智能合约，目前官方推荐的开发语言是与JavaScript一脉相承的Solidity，官方有帮助文档，也有很多技术达人翻译了中文版。学习Truffle很多以太坊开发者把Truffle框架比作是开发以太坊的瑞士军刀，它让以太坊上运行的智能合约代码能轻松地与传统的互联网系统进行交换数据，大大降低了新手的学习曲线。（附：Truffle框架链接）
  ❺学习超级账本Hyperledger Fabric超级账本是由IBM贡献的超级账本框架。它是一个利用现有成熟的技术来组合而成的一个区块链技术的实现。它是一种允许可插拔实现各种功能的的模块化架构，具有强大的容器技术，来承载各种主流语言来编写智能合约，它为企业开发区块链系统提供了一系列的强大功能包括但不限于身份管理、隐私保密、高效处理、智能合约、模块设计等，很值得企业级应用开发者深入研究和学习。
  ❻选修EOS
  EOS（Enterprise Operation System）不容忽视，它是一款为商用分布式应用设计的区块链操作系统，支持多个应用程序同时运，还可以同时支持多种编程语言，为开发DApp的开发者提供底层模块，降低开发门槛，就像是微软的windows，另外，EOS通过并行链和DPOS的方式解决了延迟和数据吞吐量的难题，EOS能够实现每秒百万级的处理量，相比目前比特币的每秒7笔，以太坊的几百上千笔，EOS在吞吐量上可以说秒杀了它们。链圈内普遍看好EOS的前景，从EOS代币的市值（发文时市值66亿美金）就可以初步看出端倪。当然无论是比特币、以太坊、超级账本、还是EOS，它们都在不断的更新迭代和完善之中，单纯比较谁优谁劣没有意义，通过学习它们掌握区块链开发的技术才是我们的归途。
  
  
  ## 区块链技术开发路线
  目录
  
  〇、背景陈述：　　
  一、公链-比特币的学习：
  二、联盟链-Hyperledger Fabric学习：
  三、公链-以太坊的学习：
   
   
   正文
  
  
  〇、背景陈述：　　
  　　已经对区块链领域的学习研究了一段时间。总体来说，前期主要是围绕bitcoin架构及其源码学习的，但对这个领域的技术开发还是不太熟悉。为了使自己对区块链领域有一个系统的学习和技术锤炼，特此总结了如下技术开发路线，来逐渐充实自己的区块链开发知识体系。
  
  　　这篇博文主要是对之后的技术开发路线做一个清晰的规划。
  
  　　对于一个古典互联网人如何进入区块链呢？我觉得比较现实的有两种姿势。　　
  
  　　
  　　一种是信仰，说实话，当前阶段不炒币来做区块链特别是公链的人，那真的需要信仰啊，公链要技术上能投入实用，要把生态建立起来需要很长的过程，能耐住性子，经历创业九死一生，那不是信仰又是什么呢？这样的人值得尊敬，因为他们推动了真正的技术进步。
  
  　　另一种是实用，深圳前不久开出了第一张基于区块链的发票，现在要想做联盟链相关 的项目，其实真的机会很多，技术也相对的成熟，做做项目养家糊口很实际啊，这里区块链跟其它技术没什么两样。
  
  　　作为一名比较务实的技术开发人员，为了谋生而将主要精力放在Hyperledger Fabric（联盟链）的开发上，是一个比较稳健的选择。但是对于区块链的鼻祖——比特币的学习，我认为又是不可或缺的。比特币相当于公链，相对于以太坊来说，比特币是属于比较早期的区块链。我们学习比特币主要在于对区块链的经典技术原理有一个较全面的认识和积累。
  
  　　而之所以不选择以太坊，主要是我认为以太坊作为一个系统比较复杂的公链系统，其技术仍旧不太稳定、仍处于不断完善之中。Solidity编写智能合约，其底层也存在很多漏洞，所以学习该技术还是存在一些风险的。不过感兴趣的开发人员，可以学习下以太坊技术的原理及相关架构，也会受益良多。
  
  　　所以下边，我针对公链-比特币及联盟链-Hyperledger Fabric提出自己的技术学习路线。
  
  
  ❶ 公链-比特币的学习：
  学习目标：主要针对比特币的相关技术进行学习研究，对其原理及实现方法全面掌握
  
  1. 深入学习比特币的白皮书。对其技术及原理有全面的了解，并针对其中提到的技术进行深入学习。
  
  2. 搭建测试网络，对比特币系统进行测试。
  
  3. 比特币源码学习。比特币源码有多个版本，开始自己看了一部分的C版，但是后来的Hyperledger Fabric要用到GO语言写链码（智能合约）。所以准备之后学习GO版本源码。对其技术架构及技术实现，进行深入学习，并完全掌握！
  
  　　完成以上目标，我觉得对于经典的区块链系统学习已经够了。
  
  
  ❷ 联盟链-Hyperledger Fabric学习：
  学习目标：掌握其技术架构和对核心模块的理解；掌握智能合约编写；对官方提供的学习实例进行深入学习并掌握；掌握应用的技术开发；其中用到的工具语言最好能够做到精通！
  
  1. 工具语言的学习：
  
  　　1）go语言，Fabric、docker等多是基于go语言开发。Bitcoin现在也有了go语言版源码。所以掌握该语言，能够帮助我们阅读这些技术的源码，还可以帮助我们进行智能合约开发。GO语言有简洁，快速，安全，并行，有趣，开源，支持泛型编程，内存管理，数组安全，编译迅速等特点。有点语言基础，很容易掌握。
  
  　　我用了一天时间对该语言的基本语言进行了快速学习，基本上就对这门语言有了了解。之后肯定是需要深入学习的，我们可以借助Github上一些技术文档进行学习。争取精通这门语言。
  
  　　2）Java、Node.js、Python等。这些语言主要是在开发应用程序时，对chaincode(链码/智能合约)进行调用，而且都有与之匹配的SDK。所以语言可以自己选择。因为很多应用是基于Web端的，所以Node.js用得较多。当然如果仅仅做测试及学习，并不是完全为了商业项目，已掌握的Python与Java也是不错的选择。
  
  2. Hyperledger架构及核心模块学习：
  
  　　1）仔细阅读白皮书。了解其技术原理；其中的关键术语也要深入理解掌握。
  
  　　2）对Fabric核心模块进行学习。
  
  　　3）核心源码学习。这是我们技术实现提升、能够深入理解其技术实现的关键。
  
  3. 技术开发学习：
  
  　　1）chaincode学习。学习编写智能合约。多读源码、多练习。
  
  　　2）应用开发。主要是通过自己其他语言工具调用智能合约进行技术开发。Fabric模块的Grpc接口可以被任何语言调用。但是如果一切从底层开始实现的话，这样的开发效率是非常低的。目前 Hyperledger项目组已提供的基于Nodejs、Java、Go、Python这四种语言的SDK，这些SDK对Fabric常用操作进行了封装，已大大简化了开发工作。
  
  4. 相关项目源码学习：
  
  　　已经学会了上述开发流程，我们最好在Github上寻找些开源项目进行学习并提升。
  
  
  ❸ 公链-以太坊的学习：
  学习目标：这部分的学习，我认为对于我们想从事联盟链开发的技术人员来说，主要是为了了解其技术架构、对其核心模块有一个大概了解，以助于我们对于整个区块链技术的了解。我觉得做到这个地步就够了。
  
  
  # 区块链主流开源技术体系
  一、     比特币体系比特币（BitCoin）是最早也是全球最广泛使用和真正意义的去中心化区块链技术，因此他的开源技术体系非常值得参考。比特币区块链的核心技术框架采用C++语言开发，共识算法采用POW算法，工作量（挖矿）证明获得记账权，容错50%，实现全网记账，公网性能TPS<7。开源地址为：https://github.com/bitcoin/bitcoin
  
  二、     以太坊ETH刚结束的以太坊全球开发者大会DEVCON2，吸引了无数大牛到上海，可以看到，以太坊生态系统正在高速地成长着，正朝着成为“世界计算机”的目标前进。无论是the DAO众筹到攻击，还是ETH与ETC 分道扬镳，或者是各种以太坊生态的开发框架和应用，以太坊目前在区块链平台是最吸引眼球的。以太坊是一个图灵完备的区块链一站式开发平台，采用多种编程语言实现协议，采用GO语言写的客户端作为默认客户端（即与以太坊网络交互的方法, 支持其他多种语言的客户端）。基于以太坊平台之上的应用是智能合约，这是以太坊的核心。智能合约配合友好的界面和外加一些额外的小支持，可以让用户基于合约搭建各种千变万化的DApp应用，这样使得开发人员开发区块链应用的门槛大大降低。以太坊ETH的开源地址：https://github.com/ethereum/。以太坊的整个技术生态系统比较强大，同时迭代周期比较快，所以有比较强的生命力，但事物都有两面，对于依赖于以太坊特别是以太坊公网的商业应用来说，频繁的迭代升级和处于风口浪尖（被攻击），使得基于以太坊的商业应用，有时候不得不打足精神去跟以太坊一起升级维护和补丁。目前以太坊正在正式运行1.0版本，采用的是POW挖矿的共识算法，目前公网的TPS是25笔，在开发中的1.5版本，将采用类POS的Casper算法，以使区块链的确认速度相对于POW的线性效率，达到指数级。采用Casper后将会更好的确认机制，以及大幅降低能量消耗。在规划的 2.0版本目标，TPS有望可以达到2000TPS。
  
  三、     IBM HyperLedger fabricIBMHyperLedger，又叫 fabric，是一个带有可插入各种功能模块架构的区块链实施方案，他的目标是打造成一个由全社会来共同维护的一个超级账本。Elwin个人感觉fabric分层设计比较合理，模块化程度非常不错，虽然目前还是在完善阶段，并没有真正商用（最近IBM携手中国银联打造区块链为基础的忠诚积分交易系统，但还是属于探索试样项目），但以IBM的多年技术底蕴，fabric应该是大企业构建区块链底层的选择之一。fabric架构核心逻辑有三条：Membership、Blockchain和Chaincode。MembershipServices这项服务用来管理节点身份、隐私、保密性、可审计性。Blockchain services使用建立在HTTP/2上的P2P协议来管理分布式账本，提供最有效的哈希算法来维护区块链世界状态的副本。采取可插拔的方式来根据具体需求来设置共识协议，比如PBFT，Raft，PoW和PoS等等，IBM首选PBFT算法。Chaincode services 会提供一种安全且轻量级的沙盒运行模式，来在VP节点上执行chaincode逻辑，类似以太坊的EVM虚拟机及其他上面运行的智能合约。开源地址：https://github.com/hyperledger/fabric。Fabric的主要框架核心开发语言是GO语言，系统目标是15个验证节点下最理想情况下可以有100K TPS的性能，更适合于联盟链。
  
  四、     比特股BitShare比特股（BitShares）是区块链历史上里程碑式的产品之一，截至目前仍然是完整度最高、功能最丰富、性能最强大的区块链产品之一。比特股是可以看作是一个公司、货币甚至是一个社区。它提供的BitUSD等锚定资产是虚拟币历史上的一个最重要变革之一，能够极大消除虚拟货币被人诟病的波动性大的问题。比特币低效率高能耗的POW算法，使得比特股及其DPos共识算法应运而生。有别于比特币特定的共识机制，DPos有一个内置的实时股权人投票系统，就像系统随时都在召开一个永不散场的股东大会，所有股东都在这里投票决定公司决策。与比特币相比，比特股系统的投票权牢牢掌握在股东手里，而不是雇员。比特股系统的去中心化程度紧紧掌握在比特股持有者们的手中，他们决定了出块受托人的个数。同时，作恶的受托人不会得到任何好处，并且很快就会被投票出局。此外，比特股内置了强大的账户权限设定、灵活的多重签名方式、白名单等特性，足以满足企业级的功能定制需求。比特股的1.0开源地址是：https://github.com/bytemaster/bitshares，2.0开源库在：http://github.com/bitshares。他的核心技术框架采用C++语言开发，既适用于公有链，也适合于联盟链，只需要少量节点进行记账，TPS>500，容错50%，在比特股2.0中如果在最优的网络和硬件情况下可以达到最高100K的TPS。五、     公证通Factom公证通（Factom）利用比特币的区块链技术来革新商业社会和政府部门的数据管理和数据记录方式，也可以被理解为是一个不可撤销的发布系统，系统中的数据一经发布，便不可撤销，提供了一份准确、可验证、且无法篡改的审计跟踪记录。利用区块链技术帮助各种各样应用程序的开发，包括审计系统，医疗信息记录，供应链管理，投票系统，财产契据，法律应用，金融系统等。建立在Factom基础之上的应用程序寻求能够直接利用区块链实现追踪资产和实现合约，而不用将交易记录写入区块链，Factom在自己的架构中记录条目。跟以太坊类似，Factom系统会创造一个叫Factoids的电子币。持有Factoids意味着有权使用Factom系统。只要把Factoids转化成输入积分便有权把数据写入Factom系统中。同时运行着Factom的联邦服务器也能收获Factoids作为维护系统的回报。Factom虽然同样基于比特币网络，但却并不是之前提到侧链或染色币的技术架构，Factom只将目录区块的哈希值锚定到比特币区块链。Factom很好地解决了比特币三个核心的约束和问题，速度、成本和区块链膨胀。Factom中的政策和奖励机制与POS机制有相似之处。与其不同之处在于，Factom中只有一小部分的用户权益能够被认可。只有已经提交到系统的权益有投票权，而可转移的Factoid权益没有投票权，避免了POS机制的“股份磨损”和“没有人进行POS”问题。公证通的开源地址是：https://github.com/FactomProject/FactomCode。他的核心技术框架采用GO语言开发，TPS是27笔左右(待考究)。最新情况，Factom将不会只依赖于比特币区块链，他将会同样会通过整合以太坊区块链，以来确保存放的数据时时刻刻都是安全的。
  
  六、     瑞波Ripple瑞波（Ripple）是世界上第一个开放的支付网络，是基于区块连的点到点全球支付网络。通过这个支付网络，使你轻松、廉价并安全的把你的金钱转账到互联网上的任何一个人，无论他在世界的哪个地方，他可以转账任意一种货币，包括美元、欧元、人民币、日元或者比特币，简便易行快捷，交易确认在几秒以内完成，交易费用几乎是零，没有所谓的跨行异地以及跨国支付费用。Ripple有两个重要概念，其一是推出Ripple币瑞波币——XRP，它作为Ripple网络的基础货币，就像比特币一样可以整个网络中流通，主要是燃料Gas的作用，每产生一笔交易就会消耗一些 XRP；其二是引入网关（Gateway）系统，它类似于货币兑换机构，允许人们把法定货币注入、抽离Ripple网络，并可充当借、贷双方的桥梁。Ripple引入了一个共识机制RPCA，通过特殊节点的投票，在很短的时间内就能够对交易进行验证和确认。Ripple客户端不需要下载区块链，它在普通节点上舍弃掉已经验证过的总帐本链，只保留最近的已验证总帐本和一个指向历史总帐本的链接，因而同步和下载总帐本的工作量很小。Ripple的作用并不仅仅只负责清算货币兑换，它可以是各种虚拟货币、数字资产或任意一种有价值的东西。Ripple的开源地址是：https://github.com/ripple/rippled，他的核心技术框架采用C++语言开发，TPS<1000。
  
  七、     未来币NXT未来币（Nxt、Nextcoin）是第二代去中心化虚拟货币，它使用全新的代码编写，不是比特币的山寨币。它第一个采用100%的股权证明POS算法，有资产交易、任意消息、去中心化域名、帐户租赁等多种功能，部分实现了透明锻造功能。Nxt是且是第一个100%的股权证明机制的电子货币，Nxt不再通过消耗大量的资源“挖矿”产生新货币，而是通过现有账户的余额去“锻造”区块，并给与成功“锻造”区块的账户交易费用奖励。Nxt具有一个非常灵活的特性，称为“透明锻造”。这一机制使得每一个用户客户端可以自动决定哪个服务器节点能够产生下一个区块。这使得客户端可以直接将交易发送到这个节点，从而使得交易的时间达到最短。实时和高优先级的交易可以通过支付额外的费用来被优先处理。Nxt区块链2.0已经在讨论和计划实施中了，其核心思路就是要通过主链（Main Chain）和子链（Child Chain）的这种架构来增加Nxt区块链的可扩展性和可删减性，从而解决长期存在的区块链膨胀等问题；Nxt的开源地址是：https://bitbucket.org/JeanLucPicard/nxt/overview,他的核心技术框架采用JAVA语言开发，TPS<1000。
  
  八、其他此外，还有几个区块链技术体系也介绍一下：英特尔的锯齿湖（Sawtooth Lake），目前是用于建造、部署和运行分布式账本的高度模块化平台，重点领域在数字资产，在锯齿湖的数据模型和交易事务语言中，是由称为“transaction family”的体系来实现的, 給用户可以有开箱即用的功能齐全的市场数字资产管理体系。采用PoET和Quorum Voting两种共识算法，框架核心开发语言Python，开源地址为https://github.com/intelledger。布比区块链，目前采用的是对联盟链内定向开源，共识算法采用自研发的Pool验证池，可以集成Byzantine Paxos、Byzantine、Raft等商用共识算法，实现免Gas费用的秒级共识验证，框架核心开发语言是C++，应用场景比较广泛。小蚁区块链，开源地址为https://github.com/antshares/antshares，采用改进的拜占庭容错算法-dBFT共识算法，支持智能合约，目前重点领域在数字资产应用，框架核心开发语言C#。
  
  
  
  
  # 学习资源
  
  ❶ 以太坊
  * [EthFans | 以太坊爱好者](https://ethfans.org)
  
  
  ❷ HyperLedger/Fabric
  * [Hyperledger Fabric 1.0 从零开始（一） - Aberic - 博客园](http://www.cnblogs.com/aberic/p/7527831.html)
  
  
  ❸ 比特币
  
'''
tags: []
isStarred: false
isTrashed: false
